apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    gno.service: gnoland
    gno.type: rpc
  name: gnoland-rpc
  namespace: gno
spec:
  replicas: 1
  selector:
    matchLabels:
      gno.service: gnoland
      gno.type: rpc
  template:
    metadata:
      labels:
        gno.service: gnoland
        gno.type: rpc
        gno.role: validator 
    spec:
      initContainers:
      - name: init-secrets
        image: ghcr.io/gnolang/gno/gnoland:0.2.0
        args:
        - secrets
        - init
        - -force=true
        volumeMounts:
        - name: gno-rpc-vol
          mountPath: /gnoroot/gnoland-data
      containers:
      - name: gnoland
        image: ghcr.io/gnolang/gno/gnoland:0.2.0
        imagePullPolicy: IfNotPresent
        args:
          - start
          - --lazy
          # - --genesis=/gnoroot/gnoland-genesis/genesis.json
        volumeMounts:
        - name: gno-rpc-vol
          mountPath: /gnoroot/gnoland-data
        - name: gno-rpc-conf
          mountPath: /gnoroot/gnoland-data/config
        # - name: gnoland-genesis
        #   mountPath: /gnoroot/gnoland-genesis
        resources:
          limits:
            cpu: "1000m"
            memory: "4Gi"
          requests:
            cpu: "500m"
            memory: "2Gi"
        ports:
          - name: rpc-public
            containerPort: 26657
          - name: rpc-internal
            containerPort: 26656
      volumes:
      - name: gno-rpc-vol
        persistentVolumeClaim:
          claimName: gno-rpc-pv-claim
      - name: gno-rpc-conf
        configMap:
          name: gno-rpc-config
          items:
          - key: config.toml
            path: config.toml
      # - name: gnoland-
      #   configMap:
      #     name: gno-genesis
