apiVersion: v1
kind: ServiceAccount
metadata:
  # namespace: gno
  name: traefik-ingress-controller
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: traefik
  labels:
    app: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-ingress-controller
      containers:
        - name: traefik
          image: traefik:v3.1
          args:
            - --api.insecure
            - --accesslog
            # - --log.level=DEBUG
            - --entrypoints.web.address=:80
            - --entrypoints.websecure.address=:4443
            # k8s
            - --providers.kubernetescrd
            # IngressRoute can reference resources in namespaces other than theirs
            - --providers.kubernetescrd.allowCrossNamespace=true
            # ingressRoutes can reference ExternalName services
            - --providers.kubernetescrd.allowexternalnameservices=true
            - --certificatesresolvers.myresolver.acme.tlschallenge
            - --certificatesresolvers.myresolver.acme.email=foo@you.com
            - --certificatesresolvers.myresolver.acme.storage=acme.json
            # Please note that this is the staging Let's Encrypt server.
            # Once you get things working, you should remove that whole line altogether.
            - --certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
          ports:
            - name: web
              containerPort: 80
            - name: websecure
              containerPort: 4443
            - name: admin
              containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: traefik
spec:
  selector:
    app: traefik
  ports:
  - name: admin
    protocol: TCP
    port: 8080
    targetPort: 8080
    nodePort: 31808
  - name: web
    protocol: TCP
    port: 80
    targetPort: 80
    nodePort: 30080
  - name: webtls
    protocol: TCP
    port: 443
    targetPort: 4443
    nodePort: 30443
  type: NodePort
